:root {
  --card-height: 40vw;
  --card-margin: 4vw;
  --card-top-offset: 1em;
  --outline-width: 0px;
}

#cards {
  padding-bottom: calc(var(--numcards) * var(--card-top-offset));
  margin-bottom: var(--card-margin);
  list-style: none;
  outline: calc(var(--outline-width) * 10) solid hotpink;
  display: grid;
  grid-template-columns: 1fr;
  grid-template-rows: repeat(var(--numcards), var(--card-height));
  gap: var(--card-margin);
  --numcards: 6;
  view-timeline-name: --cards-element-scrolls-in-body;
}

.card {
  position: sticky;
  top: 0;
  padding-top: calc(var(--index) * var(--card-top-offset));
  outline: var(--outline-width) solid lime;
  --index0: calc(var(--index) - 1);
  --reverse-index: calc(var(--numcards) - var(--index0));
  --reverse-index0: calc(var(--reverse-index) - 1);
}

.card__content {
  transform-origin: 50% 0%;
  will-change: transform;
  box-shadow: 0 0.2em 1em rgba(0, 0, 0, 0.1), 0 1em 2em rgba(0, 0, 0, 0.1);
  background: rgb(255, 255, 255);
  color: rgb(10, 5, 7);
  border-radius: 1em;
  overflow: hidden;
  display: grid;
  grid-template-areas: "text img";
  grid-template-columns: 1fr 1fr;
  grid-template-rows: auto;
  align-items: stretch;
  outline: var(--outline-width) solid blue;

  --start-range: calc(var(--index0) / var(--numcards) * 100%);
  --end-range: calc((var(--index)) / var(--numcards) * 100%);
  animation: linear scale forwards;
  animation-timeline: --cards-element-scrolls-in-body;
  animation-range: exit-crossing var(--start-range) exit-crossing var(--end-range);
}

.card__content > div {
  grid-area: text;
  width: 80%;
  place-self: center;
  text-align: left;
  display: grid;
  gap: 1em;
  place-items: start;
}

.card__content > figure {
  grid-area: img;
  overflow: hidden;
}

.card__content > figure > img {
  width: 100%;
  height: 100%;
  object-fit: cover;
  padding: 80px;
}

header,
main {
  width: 80vw;
  margin: 0 auto;
  text-align: center;
}

header {
  height: 70vh;
  display: grid;
  place-items: center;
  font-size: 40px;
  color:#00296b;
}

body {
  background: #CAF0F8;
  color: rgb(255, 255, 255);
  font-size: calc(1em + 0.5vw);
}

main * {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

main h1 {
  font-weight: 300;
  font-size: 3.5em;
  color:#85c5e5;
}

main h2 {
  font-weight: 300;
  font-size: 2.5em;
  color: #7dc6ea;
}

main p {
  font-family: sans-serif;
  font-weight: 300;
  line-height: 1.42;
  color: #023047;
}

main .btn {
  width: 150px;
  padding: 12px;
  border-radius: 20px;
  color: #0096C7;
  border: 3px solid #48CAE4;
  cursor: pointer;
  background: transparent;
  background-repeat: repeat-x;
  background-position: 0 -100%;
  transition: 1.25s ease;
}

main .btn:hover {
  background-position: center;
  color: #ffffff;
  background-color: #48CAE4;
}

/* Hue rotate coloring for buttons */
main .btn:nth-child(1) { filter: hue-rotate(0deg); }
main .btn:nth-child(2) { filter: hue-rotate(40deg); }
main .btn:nth-child(3) { filter: hue-rotate(60deg); }
main .btn:nth-child(4) { filter: hue-rotate(80deg); }
main .btn:nth-child(5) { filter: hue-rotate(100deg); }
main .btn:nth-child(6) { filter: hue-rotate(120deg); }
main .btn:nth-child(7) { filter: hue-rotate(140deg); }
main .btn:nth-child(8) { filter: hue-rotate(160deg); }
main .btn:nth-child(9) { filter: hue-rotate(180deg); }
main .btn:nth-child(10) { filter: hue-rotate(160deg); }
main .btn:nth-child(11) { filter: hue-rotate(200deg); }
main .btn:nth-child(12) { filter: hue-rotate(260deg); }

.animation-container {
  width: 600px;
  height: 700px;
  border: 1px solid #ffffff;
  transition: all 0.3s ease;
  cursor: pointer;
  padding: 20px;
}

@keyframes scale {
  to {
    transform: scale(calc(1.1 - (0.1 * var(--reverse-index))));
  }
}
